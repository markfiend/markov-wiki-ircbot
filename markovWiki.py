#!/usr/bin/python2

' Released under GNU GPL v3 http://www.gnu.org/licenses/gpl.html '

from wikiscraper import WikiScraper
from markovtweet import MarkovTweet
from ircbot import IRCBot

import random, time, ConfigParser, os

class WikiBot(IRCBot):
    ' Posts random snippets from Wikipedia in an IRC channel '
    def __init__(self):
        ' Load up some configs '
        conf = ConfigParser.ConfigParser()
        conf.readfp(open('CONFIG'))
        config = dict(conf.items('Main'))

        # initialise the parent object
        IRCBot.__init__(self, config['ip'], int(config['port']),
                        config['nick'], config['chan'], config['pass'])

        # Some additional parameters
        self.pingcounter = 0
        self.prepends = []
        for x in [a[1] for a in conf.items('Prepends')]:
            self.prepends.append(x + ' ')
            self.prepends.append('')
            self.prepends.append('')
        self.PING = int(config['pings'])

    def send_random_message(self):
        'Do a random message generated by the MarkovTweet module '
        w = WikiScraper()
        w.main()
        m = MarkovTweet('wikiparagraphs.txt')
        msg = m.tweet()

        # Stick on a random prefix to the message
        p = random.choice(self.prepends)
        self.send_this(p + msg)

    def single_wiki(self, line):
        ' Generate a message based on the last two words of the request  '
        line = line.split()
        if len(line) < 2:
            # shouldn't happen. You nead at least NICKNAME about
            self.send_random_message()
            return

        m = MarkovTweet('wikiparagraphs.txt')
        self.send_this(m.tweet((line[-2], line[-1])))

    def send_this(self, msg):
        print msg
        self.IRC.send('PRIVMSG ' + self.CHANNEL + ' :' + msg + '\r\n')
        self.pingcounter = 0

    def parse(self, line):
        if line[0:4] == "PING":
            # need to pong a ping. :)
            self.IRC.send("PONG %s\r\n" % line[1])
            self.pingcounter += 1
        else:
            print line

        if self.pingcounter >= self.PING:
            # send a message if the channel is too quiet
            # but only post weekdays 9am to 5pm
            if time.strftime('%a') not in ('Sat', 'Sun') and int(time.strftime(
                    '%H')) in range(9, 17):
                self.send_random_message()

        if self.CHANNEL + ' :' in line:
            # Parse actual messages
            line = line.partition(self.CHANNEL + ' :')[2]

            if self.NICKNAME.lower() in line.lower():
                # Look for the bot's own name (case-insensitive)
                if 'about' in line.lower():
                    # make a guess at what we're being asked
                    self.single_wiki(line)
                else:
                    # and send a message if it's mentioned
                    self.send_random_message()

if __name__ == '__main__':
    m = WikiBot()
    m.run()
